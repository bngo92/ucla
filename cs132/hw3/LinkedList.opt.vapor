
const empty_Element

const empty_List

const empty_LL


func Main()
  t.0 = call :LL.Start(:empty_LL)
  PrintIntS(t.0)
  ret

func Element.Init(this v_Age v_Salary v_Married)
  [this+0] = v_Age
  [this+4] = v_Salary
  [this+8] = v_Married
  ret 1

func Element.GetAge(this)
  t.0 = [this+0]
  ret t.0

func Element.GetSalary(this)
  t.0 = [this+4]
  ret t.0

func Element.GetMarried(this)
  t.0 = [this+8]
  ret t.0

func Element.Equal(this other)
  ret_val = 1
  if other goto :null1
    Error("null pointer")
  null1:
  aux01 = call :Element.GetAge(other)
  t.0 = [this+0]
  t.1 = call :Element.Compare(this aux01 t.0)
  if t.1 goto :if1_else
    ret_val = 0
    goto :if1_end
  if1_else:
    if other goto :null2
      Error("null pointer")
    null2:
    aux02 = call :Element.GetSalary(other)
    t.2 = [this+4]
    t.3 = call :Element.Compare(this aux02 t.2)
    if t.3 goto :if2_else
      ret_val = 0
      goto :if2_end
    if2_else:
      t.4 = [this+8]
      if0 t.4 goto :if3_else
        if other goto :null3
          Error("null pointer")
        null3:
        t.5 = call :Element.GetMarried(other)
        if t.5 goto :if4_else
          ret_val = 0
          goto :if4_end
        if4_else:
          nt = 0
        if4_end:
        goto :if3_end
      if3_else:
        if other goto :null4
          Error("null pointer")
        null4:
        t.6 = call :Element.GetMarried(other)
        if0 t.6 goto :if5_else
          ret_val = 0
          goto :if5_end
        if5_else:
          nt = 0
        if5_end:
      if3_end:
    if2_end:
  if1_end:
  ret ret_val

func Element.Compare(this num1 num2)
  retval = 0
  aux02 = Add(num2 1)
  t.0 = LtS(num1 num2)
  if0 t.0 goto :if6_else
    retval = 0
    goto :if6_end
  if6_else:
    t.1 = LtS(num1 aux02)
    if t.1 goto :if7_else
      retval = 0
      goto :if7_end
    if7_else:
      retval = 1
    if7_end:
  if6_end:
  ret retval

func List.Init(this)
  [this+8] = 1
  ret 1

func List.InitNew(this v_elem v_next v_end)
  [this+8] = v_end
  [this+0] = v_elem
  [this+4] = v_next
  ret 1

func List.Insert(this new_elem)
  aux03 = this
  aux02 = HeapAllocZ(12)
  if new_elem goto :null5
    Error("null pointer")
  null5:
  ret_val = call :List.InitNew(aux02 new_elem aux03 0)
  ret aux02

func List.SetNext(this v_next)
  [this+4] = v_next
  ret 1

func List.Delete(this e)
  my_head = this
  ret_val = 0
  aux04 = Sub(0 1)
  aux01 = this
  prev = this
  var_end = [this+8]
  var_elem = [this+0]
  while1_top:
  if0 [this+0] goto :while1_end
    if e goto :null6
      Error("null pointer")
    null6:
    t.0 = call :Element.Equal(e var_elem)
    if0 t.0 goto :if8_else
      ret_val = 1
      t.1 = LtS(aux04 0)
      if0 t.1 goto :if9_else
        my_head = call :Element.GetNext(aux01)
        goto :if9_end
      if9_else:
        t.2 = Sub(0 555)
        PrintIntS(t.2)
        t.3 = call :Element.GetNext(aux01)
        aux05 = call :Element.SetNext(prev t.3)
        t.4 = Sub(0 555)
        PrintIntS(t.4)
      if9_end:
      goto :if8_end
    if8_else:
      nt = 0
    if8_end:
    if ret_val goto :if10_else
      prev = aux01
      aux01 = call :Element.GetNext(aux01)
      var_end = call :Element.GetEnd(aux01)
      var_elem = call :Element.GetElem(aux01)
      aux04 = 1
      goto :if10_end
    if10_else:
      nt = 0
    if10_end:
    goto :while1_top
  while1_end:
  ret my_head

func List.Search(this e)
  int_ret_val = 0
  aux01 = this
  var_end = [this+8]
  var_elem = [this+0]
  while2_top:
  if0 var_end goto :while2_end
    if e goto :null7
      Error("null pointer")
    null7:
    t.0 = call :Element.Equal(e var_elem)
    if0 t.0 goto :if11_else
      int_ret_val = 1
      goto :if11_end
    if11_else:
      nt = 0
    if11_end:
    aux01 = call :Element.GetNext(aux01)
    var_end = call :Element.GetEnd(aux01)
    var_elem = call :Element.GetElem(aux01)
    goto :while2_top
  while2_end:
  ret int_ret_val

func List.GetEnd(this)
  t.0 = [this+8]
  ret t.0

func List.GetElem(this)
  if [this+0] goto :null8
    Error("null pointer")
  null8:
  t.0 = [this+0]
  ret t.0

func List.GetNext(this)
  if [this+4] goto :null9
    Error("null pointer")
  null9:
  t.0 = [this+4]
  ret t.0

func List.Print(this)
  aux01 = this
  var_end = [this+8]
  var_elem = [this+0]
  while3_top:
  if0 var_end goto :while3_end
    t.0 = call :List.GetAge(var_elem)
    PrintIntS(t.0)
    aux01 = call :List.GetNext(aux01)
    var_end = call :List.GetEnd(aux01)
    var_elem = call :List.GetElem(aux01)
    goto :while3_top
  while3_end:
  ret 1

func LL.Start(this)
  last_elem = HeapAllocZ(12)
  aux01 = call :List.Init(last_elem)
  head = last_elem
  aux01 = call :List.Init(head)
  aux01 = call :List.Print(head)
  el01 = HeapAllocZ(12)
  aux01 = call :Element.Init(el01 25 37000 0)
  head = call :Element.Insert(head el01)
  aux01 = call :Element.Print(head)
  PrintIntS(10000000)
  el01 = HeapAllocZ(12)
  aux01 = call :Element.Init(el01 39 42000 1)
  el02 = el01
  head = call :Element.Insert(head el01)
  aux01 = call :Element.Print(head)
  PrintIntS(10000000)
  el01 = HeapAllocZ(12)
  aux01 = call :Element.Init(el01 22 34000 0)
  head = call :Element.Insert(head el01)
  aux01 = call :Element.Print(head)
  el03 = HeapAllocZ(12)
  aux01 = call :Element.Init(el03 27 34000 0)
  t.0 = call :Element.Search(head el02)
  PrintIntS(t.0)
  t.1 = call :Element.Search(head el03)
  PrintIntS(t.1)
  PrintIntS(10000000)
  el01 = HeapAllocZ(12)
  aux01 = call :Element.Init(el01 28 35000 0)
  head = call :Element.Insert(head el01)
  aux01 = call :Element.Print(head)
  PrintIntS(2220000)
  head = call :Element.Delete(head el02)
  aux01 = call :Element.Print(head)
  PrintIntS(33300000)
  head = call :Element.Delete(head el01)
  aux01 = call :Element.Print(head)
  PrintIntS(44440000)
  ret 0
